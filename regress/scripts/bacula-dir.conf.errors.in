#
# Default Bacula Director Configuration file
#
#  The only thing that MUST be changed is to add one or more
#   file or directory names in the Include directive of the
#   FileSet resource.
#
#  For Bacula release 1.39.27 (24 October 2006) -- debian testing/unstable
#
#  You might also want to change the default email address
#   from root to your address.  See the "mail" and "operator"
#   directives in the Messages resource.
#

Director {                            # define myself
  Name = @hostname@-dir
  DIRPort = @dirport@                # where we listen for UA connections
  QueryFile = "@scriptdir@/query.sql"
  WorkingDirectory = "@working_dir@"
  PidDirectory = "@piddir@"
  SubSysDirectory = "@subsysdir@"
  Maximum Concurrent Jobs = 4
  Password = "pNvX1WiXnwv2C/F7E52LGvw6rKjbbPvu2kyuPa9pVaL3"         # Console password
  Messages = Standard
  fdconnecttimeout = 20
  sdconnecttimeout = 20
}

JobDefs {
  Name = "DefaultJob"
  Type = Backup
  Level = Incremental
  client=@hostname@-fd 
  Storage = File
  Messages = Standard
  Pool = Default
  Priority = 10
  Maximum Concurrent Jobs = 16
}

Job {
  Name = "LOCAL_INC_ERR"
  JobDefs = DefaultJob
  FileSet = FS_LOCAL_INC_ERR
  RunBeforeJob = "/bin/echo RunBeforeJob"
  ClientRunBeforeJob = "/bin/echo ClientRunBeforeJob"
  Run After Job = "/bin/echo RunAfterJob"
  ClientRunAfterJob = "/bin/echo ClientRunAfterJob"
}

FileSet {
 Name = FS_TEST
 Include {
   File=<@tmpdir@/file-list
 }
}

FileSet {
 Name = FS_REMOTE_INC_ERR
 Include {
   File="\<@tmpdir@/path/to/nowhere"
 }
}

Job {
  Name = "REMOTE_INC_ERR"
  JobDefs = DefaultJob
  FileSet = FS_REMOTE_INC_ERR
  RunBeforeJob = "/bin/echo RunBeforeJob"
  ClientRunBeforeJob = "/bin/echo ClientRunBeforeJob"
  Run After Job = "/bin/echo RunAfterJob"
  ClientRunAfterJob = "/bin/echo ClientRunAfterJob"
}

FileSet {
 Name = FS_LOCAL_INC_ERR
 Include { File=<@tmpdir@/path/to/nowhere }
}

FileSet {
 Name = FS_LOCAL_EXCL_ERR
 Include { File=<@tmpdir@/file-list }
 Exclude {
   File=<@tmpdir@/path/to/nowhere
 }
}

Job {
  Name = "LOCAL_EXCL_ERR"
  JobDefs = DefaultJob
  FileSet = FS_LOCAL_EXCL_ERR
  RunBeforeJob = "/bin/echo RunBeforeJob"
  ClientRunBeforeJob = "/bin/echo ClientRunBeforeJob"
  Run After Job = "/bin/echo RunAfterJob"
  ClientRunAfterJob = "/bin/echo ClientRunAfterJob"
}


FileSet {
 Name = FS_REMOTE_EXCL_ERR
 Include { File=<@tmpdir@/file-list }
 Exclude {
   File="\<@tmpdir@/path/to/nowhere"
 }
}

Job {
  Name = "REMOTE_EXCL_ERR"
  JobDefs = DefaultJob
  FileSet = FS_REMOTE_EXCL_ERR
  RunBeforeJob = "/bin/echo RunBeforeJob"
  ClientRunBeforeJob = "/bin/echo ClientRunBeforeJob"
  Run After Job = "/bin/echo RunAfterJob"
  ClientRunAfterJob = "/bin/echo ClientRunAfterJob"
}
Job {
  Name = "REMOTE_RUNSCRIPT_ERR"
  JobDefs = DefaultJob
  FileSet = FS_TEST
  RunBeforeJob = "/bin/echo RunBeforeJob"
  ClientRunBeforeJob = "/bin/false"
  Run After Job = "/bin/echo RunAfterJob"
  ClientRunAfterJob = "/bin/echo ClientRunAfterJob"
}
Job {
  Name = "LOCAL_RUNSCRIPT_ERR"
  JobDefs = DefaultJob
  FileSet = FS_TEST
  RunBeforeJob = "/bin/false"
  ClientRunBeforeJob = "/bin/echo ClientRunBeforeJob"
  Run After Job = "/bin/echo RunAfterJob"
  ClientRunAfterJob = "/bin/echo ClientRunAfterJob"
}
Job {
  Name = "CLIENT_CONNECT_TIMEOUT"
  JobDefs = DefaultJob
  Client = @hostname@2-fd
  FileSet = FS_TEST
  RunBeforeJob = "/bin/echo RunBeforeJob"
  ClientRunBeforeJob = "/bin/echo ClientRunBeforeJob"
  Run After Job = "/bin/echo RunAfterJob"
  ClientRunAfterJob = "/bin/echo ClientRunAfterJob"
}
Job {
  Name = "SD_CONNECT_TIMEOUT"
  JobDefs = DefaultJob
  Client = @hostname@-fd
  FileSet = FS_TEST
  Storage = File2
  RunBeforeJob = "/bin/echo RunBeforeJob"
  ClientRunBeforeJob = "/bin/echo ClientRunBeforeJob"
  Run After Job = "/bin/echo RunAfterJob"
  ClientRunAfterJob = "/bin/echo ClientRunAfterJob"
}

# Client (File Services) to backup
Client {
  Name = @hostname@-fd
  Address = @hostname@
  FDPort = @fdport@
  Catalog = MyCatalog
  Password = "xevrjURYoCHhn26RaJoWbeWXEY/a3VqGKp/37tgWiuHc"          # password for FileDaemon
  File Retention = 30d                # 30 days
  Job Retention = 180d                # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
  Maximum Concurrent Jobs = 4
}

# Client (File Services) to backup
Client {
  Name = @hostname@2-fd
  Address = @hostname@
  FDPort = 7102
  Catalog = MyCatalog
  Password = "xevrjURYoCHhn26RaJoWbeWXEY/a3VqGKp/37tgWiuHc"          # password for FileDaemon
  File Retention = 30d                # 30 days
  Job Retention = 180d                # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
  Maximum Concurrent Jobs = 4
}

# Definiton of file storage device
Storage {
  Name = File
  Address = @hostname@                # N.B. Use a fully qualified name here
  SDPort = @sdport@
  Password = "ccV3lVTsQRsdIUGyab0N4sMDavui2hOBkmpBU0aQKOr9"
  Device = FileStorage
  Media Type = File
  Maximum Concurrent Jobs = 4
}

# Definiton of file storage device not responding
Storage {
  Name = File2
  Address = @hostname@                # N.B. Use a fully qualified name here
  SDPort = 7103
  Password = "ccV3lVTsQRsdIUGyab0N4sMDavui2hOBkmpBU0aQKOr9"
  Device = FileStorage
  Media Type = File2
  Maximum Concurrent Jobs = 4
}

# Generic catalog service
Catalog {
  Name = MyCatalog
  @libdbi@
  dbname = @db_name@; user = @db_user@; password = "@db_password@"
}


Messages {
  Name = Standard
  console = all, !skipped, !saved
  catalog = all, !skipped
}

# Default pool definition
Pool {
  Name = Default
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365d             # one year
}
