#!/bin/sh
#
# Run a simple backup of the Bacula build directory 
#  to two tapes where the maximum tape file size is set to 1M
#  Note, this test simulates the tape filling and writing to
#   the next tape.
#
#  Note we use the viritual disk autochanger
#
TestName="two-volume-test"
JobName=TwoVolume
. scripts/functions

cwd=`pwd`
scripts/cleanup
scripts/copy-2disk-confs
scripts/prepare-disk-changer
 
echo "${cwd}/build" >${cwd}/tmp/file-list

outf="tmp/sed_tmp"
echo "s%# Maximum File Size%  Maximum File Size%g" >${outf}
cp ${cwd}/bin/bacula-sd.conf ${cwd}/tmp/1
sed -f ${outf} ${cwd}/tmp/1 >${cwd}/bin/bacula-sd.conf

change_jobname NightlySave $JobName
start_test

# Write out bconsole commands
cat <<END_OF_DATA >tmp/bconcmds
@$out /dev/null
messages
@$out tmp/log1.out
label storage=tape volume=TestVolume001 slot=1 pool=Default drive=0
label storage=tape volume=TestVolume002 slot=2 pool=Default drive=0
update Volume=TestVolume001 MaxVolBytes=3000000 pool=Default drive=0
sql                               
select * from Storage;
select VolumeName,InChanger,StorageId from Media;

@#setdebug level=1000 client=$CLIENT 
run job=$JobName yes
wait
update slots scan storage=tape
sql                               
select * from Storage;
select VolumeName,InChanger,StorageId from Media;

messages
@# 
@# now do a restore
@#
@$out tmp/log2.out
restore where=${cwd}/tmp/bacula-restores select all storage=tape done
yes
wait
messages
quit
END_OF_DATA

run_bacula
check_for_zombie_jobs storage=tape
stop_bacula

check_two_logs
check_restore_diff
end_test
