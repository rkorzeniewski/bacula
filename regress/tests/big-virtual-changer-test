#!/bin/sh
#
# Run a simple backup of the Bacula build directory. Create three
#   tapes, each in a different pool, then run two jobs both of which
#   want the disk that is not loaded.  Note, they both have     
#   prefers non-mounted tapes.  This should expose bug #801
#
#  This test the SD Virtual autochanger feature.  It is a disk based
#    "autochanger", but does not use any changer script.
#
TestName="big-virtual-changer"
JobName="bigvirtualchanger"
. scripts/functions

scripts/cleanup
scripts/copy-2disk-drive-confs
scripts/prepare-disk-changer

CLIENT=2drive2disk

echo "${cwd}/build" >${cwd}/tmp/file-list
echo "${cwd}/build" >>${cwd}/tmp/file-list
echo "${cwd}/build" >>${cwd}/tmp/file-list
echo "${cwd}/build" >>${cwd}/tmp/file-list
echo "${cwd}/build" >>${cwd}/tmp/file-list
echo "${cwd}/build" >>${cwd}/tmp/file-list
#change_jobname Virtual $JobName
start_test

# Turn off Prefer Mounted Volumes so we use 2 drives
outf="${cwd}/tmp/sed_tmp"
echo "s%# Prefer Mounted Volumes%  Prefer Mounted Volumes%g" >${outf}
cp ${cwd}/bin/bacula-dir.conf ${cwd}/tmp/1
# Comment the next line out to write everything to one drive
#  otherwise, it writes the two jobs to different drives
#sed -f ${outf} ${cwd}/tmp/1 >${cwd}/bin/bacula-dir.conf

# Write out bconsole commands
cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@$out /dev/null
messages
@$out ${cwd}/tmp/log1.out
setdebug level=10 storage=Virtual
@#setdebug level=200 client=$CLIENT 
label storage=Virtual volume=TestVolume001 slot=1 Pool=Default drive=0
label storage=Virtual volume=TestVolume002 slot=2 Pool=Full    drive=0
label storage=Virtual volume=TestVolume003 slot=3 Pool=Inc     drive=1
label storage=Virtual volume=TestVolume004 slot=4 Pool=Default drive=0
status storage=Virtual
run job=Virtual level=Full Pool=Default yes
run job=Virtual level=Full Pool=Default yes
run job=Virtual level=Full Pool=Default yes
run job=Virtual level=Full Pool=Default yes
run job=Virtual level=Full Pool=Default yes
run job=Virtual level=Full Pool=Default yes
run job=Virtual level=Full Pool=Default yes
run job=Virtual level=Full Pool=Default yes
run job=Virtual level=Full Pool=Default yes
status storage=Virtual
status client
@sleep 1
status storage=Virtual
status client
@sleep 1
status storage=Virtual
status client
@sleep 1
status storage=Virtual
status client
@sleep 1
status storage=Virtual
status client
@sleep 1
status storage=Virtual
status client
@sleep 1
status storage=Virtual
status client
@sleep 1
status storage=Virtual
status client
@sleep 1
status storage=Virtual
status client
@sleep 1
status storage=Virtual
status client
@sleep 1
status storage=Virtual
status client
@sleep 1
status storage=Virtual
status client
@sleep 1
status storage=Virtual
status client
@sleep 5
status storage=Virtual
status client
list volumes
wait
list volumes
list jobs
status storage=Virtual
status client
messages
quit
END_OF_DATA

# exit

run_bacula
cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@$out /dev/null
messages
@# 
@# now do a restore
@#
@$out ${cwd}/tmp/log2.out
restore where=${cwd}/tmp/bacula-restores select all storage=Virtual done
yes
wait
messages
quit
END_OF_DATA

run_bconsole

check_for_zombie_jobs storage=Virtual
stop_bacula

check_two_logs
check_restore_diff

end_test
